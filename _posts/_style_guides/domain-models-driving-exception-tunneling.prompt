Please write a blog post that is a follow up to my previous on "Tunneling Input Exceptions to our Output Exeptions".

Please include the front matter

Our sample domain objections will be: 
    Person
    Store Location
    Transaction
    Transaction Log

Please fleshout properties of these objects and write basic input verification for these types. 

On the front end in Vue3, and Vuex we should verify objects are what we expect them to be, if they are not, we throw an exeception, provide some dummy buisness logic, and then in the vue3 component we should handle the happy path and sad path.

Include a Vue Component for Transaction Log If it loads show the list, if it doesn't show an error screen
Include the ability to drill down into first Transaction then Person or Store Location. If on any of those views we recive an exception, show an error screen. 

Include a Vuex store for Person, Store Location, Transaction, and Transaction Log. Allow for fetching all of these. If we don't pass all the validations for the definition of those objects, throw an exception that can be caught by the Vue Components. 

In Kotlin/Spring Boot let's do the reverse, and same with DB logic. 